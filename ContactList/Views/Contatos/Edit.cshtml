@model ContactList.Models.ViewModels.ContatosFormViewModel

@{
    ViewData["Title"] = "Editar contato";
}

<h1> @ViewData["Title"] </h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Contato.Id" />
            <div class="form-group">
                <label asp-for="Contato.Nome" class="control-label"></label>
                <input asp-for="Contato.Nome" class="form-control" />
                <span asp-validation-for="Contato.Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Contato.Telefone" class="control-label"></label>
                <input asp-for="Contato.Telefone" class="form-control" />
                <span asp-validation-for="Contato.Telefone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Contato.CategoriaId" class="control-label"></label>
                <select asp-for="Contato.CategoriaId" class="form-control" asp-items="@(new SelectList(Model.Categorias, "Id", "CategoriaNome"))"></select>
                <span asp-validation-for="Contato.CategoriaId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value=" Salvar " class="btn btn-dark" />
                <a asp-action="Index" class="btn btn-outline-secondary btn-sm"> voltar </a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
